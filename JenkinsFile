pipeline {
    agent {
        label 'jenkins-agent'
    }
    tools {
        nodejs 'node'
    }
    environment {
        APP_NAME = "my-portfolio"
        RELEASE = "1.0.0"
        DOCKER_USER = "13646891"
        DOCKER_PASS = "dockerhub"
        IMAGE_NAME = "${DOCKER_USER}" + "/" + "${APP_NAME}"
        IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
    }

    stages {
        stage('Cleanup Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/master']],
                    userRemoteConfigs: [[url: 'https://github.com/hamzasdiri/My-Portfolio']]
                ])
            }
        }

        stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }
        
        stage('Build') {
            steps {
                bat 'npm run build'
            }
        }
        
        stage('Test') {
            steps {
                echo "No tests yet"
            }
        }

        /*stage('Sonarqube analysis') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'jenkins-sonarqube-token') {
                        bat "sonar-scanner" 
                    }
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false,credentialsId: 'jenkins-sonarqube-token'
                }
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('',DOCKER_PASS) {
                    docker_image = docker.build("${IMAGE_NAME}", "-f DockerFile .")
                    }
                    docker.withRegistry('',DOCKER_PASS) {
                    docker_image.push("${IMAGE_TAG}")
                    docker_image.push("latest")
                    }
                }
            }
        }*/

        stage('Deploy to Firebase') {
    steps {
        script {
            // Copy the Firebase credentials JSON file to where it's needed
            bat 'copy "my-portfolio.json" "firebase-credentials.json"'
            /*bat 'npm install -g firebase-tools'
            bat 'firebase login:ci --no-localhost'*/
            bat 'firebase deploy'
        }
    }
}




        stage('Deploy') {
            steps {
                echo "I will deploy it"
            }
        }
    }
}
